{
  "info": {
    "_postman_id": "6b92b61f-e330-4133-97be-cce73eb1c09e",
    "name": "Public API - Integration Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "v1",
      "item": [
        {
          "name": "Create User V1",
          "id": "b1452072-f970-48b6-b3e2-2db1074c318a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{publicapi.authorization}}",
                "type": "text"
              },
              {
                "key": "AccessKey",
                "value": "{{publicapi.accesskey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"Name\": \"JamesTest12\",\r\n    \"EmailAddress\": \"james.speller12@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{public.api.v1baseurl}}/v1/users"
          },
          "response": []
        }
      ],
      "id": "5bff5869-a65f-4289-a800-c59ce38e0483"
    },
    {
      "name": "v2",
      "item": [],
      "id": "f9473439-ce63-4d64-87fc-d7416a4ffff2"
    },
    {
      "name": "v3",
      "item": [
        {
          "name": "ClientGroups",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "Create Client Group",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5d2b321b-a9cb-40ac-8926-d00dab92ad46",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "909c6678-b2bf-4b95-8f6b-d5d9c9702df9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"ClientManager\": \"client manager\",\r\n    \"ClientOwner\": \"client owner\",\r\n    \"ContactType\": \"contact type\",\r\n    \"FullName\": \"client group full name\",\r\n    \"UserDefinedIdentifier\": \"{{$guid}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/ClientGroups"
                  },
                  "response": []
                },
                {
                  "name": "#4350 Create Client Group with CRM Fields",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "882e17f2-58a8-47bb-bd6e-239c97b474ba",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.clientgroup_uniqueidentifier\", generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "f30b2f14-8330-46f8-9f81-516bfab1e942",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Set clientgroup properties for future tests\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.clientgroup_permakey\", jsonData.ClientGroupKey);\r",
                          "    pm.environment.set(\"public.api.clientgroup_userdefinedidentifier\", jsonData.UserDefinedIdentifier);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "f8250dbe-cd23-41f9-a89d-b95eaaacca65",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"ContactType\": \"Vendor / Supplier\",\r\n    \"FullName\": \"client group full name\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.clientgroup_uniqueidentifier}}\",\r\n    \"BusinessCard\": {\r\n        \"IsPrimaryCard\": true,\r\n        \"Addresses\": [\r\n            {\r\n                \"AddressLines\": \"address line test\",\r\n                \"City\": \"city test\",\r\n                \"StateProvinceCounty\": \"NSW\",\r\n                \"ZipCode\": \"2120\",\r\n                \"CountryCode\": \"AU\",\r\n                \"Label\": \"Test label\"\r\n            }\r\n        ],\r\n        \"PhoneNumbers\": [\r\n            {\r\n                \"Number\": \"12345678\",\r\n                \"CountryCode\": \"+61\",\r\n                \"Label\": \"Work\"\r\n            }\r\n        ],\r\n        \"WebSites\": [\r\n            \"web.cool\",\r\n            \"website.two\"\r\n            ],\r\n        \"FacebookLink\": \"facebook.com/test\",\r\n        \"LinkedInLink\": \"LinkedIn.com/test\",\r\n        \"TwitterLink\": \"Twitter.com/test\",\r\n        \"SkypeLink\": \"Skype.com/test\"\r\n    },\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/ClientGroups"
                  },
                  "response": []
                }
              ],
              "id": "d496d73d-c48a-4554-a7f9-6b7f096074bc"
            },
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "Get by PermaKey with Select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "1d204758-7db6-4a6e-89cf-8344c2b95cea"
                      }
                    }
                  ],
                  "id": "42870a04-6db1-459e-82a3-3d4cc52dc92f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups/3S2qmFq6pL2y?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups",
                        "3S2qmFq6pL2y"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get by PermaKey",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "c3aa173d-3855-4002-83a6-9d331cec644a"
                      }
                    }
                  ],
                  "id": "3ca2f766-6204-4624-b2dc-bcf45a9baa89",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups/{{public.api.clientgroup_permakey}}?$expand=BusinessCard",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups",
                        "{{public.api.clientgroup_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCard"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "#4350 Get by PermaKey with expand crm field tests for create request",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d0ba3ba5-36f9-4090-820d-831ee5d7e53f",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Restriction Level Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.RestrictionLevel).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Entity Description Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.EntityDescription).to.not.eql(undefined);\r",
                          "    pm.expect(jsonData.EntityDescription.Text).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Contact Social Media Links Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCard.FacebookLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCard.LinkedInLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCard.TwitterLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCard.SkypeLink).length.greaterThan(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "33a1a83a-9268-4b74-901c-516f68c8709e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups/{{public.api.clientgroup_permakey}}?$expand=BusinessCard",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups",
                        "{{public.api.clientgroup_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCard"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "aa978630-92af-4353-a467-0fe60d7b3d9e"
            },
            {
              "name": "Get by UserDefinedIdentifier",
              "item": [
                {
                  "name": "Get a ClientGroup from the supplied User Defined Identifier",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b56bc74-520d-4e4b-805d-8388d729bdea",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business Cards aren't loaded without expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards).to.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "8ef2d17f-fe60-4e62-ba6f-b33d7de83e9b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/ClientGroups/KarbonService.GetClientGroupByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.clientgroup_userdefinedidentifier}}')"
                  },
                  "response": []
                },
                {
                  "name": "Get a ClientGroup from the supplied User Defined Identifier with expand",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e99f6d42-c3d8-4e0b-8a06-be33299a4874",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Assert correct client group\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    var existingClientGroupKey = pm.environment.get(\"public.api.clientgroup_permakey\");\r",
                          "\r",
                          "    if (existingClientGroupKey){\r",
                          "        pm.expect(jsonData.ClientGroupKey).to.eql(existingClientGroupKey);\r",
                          "    }\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business are loaded with expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCard).to.not.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "67d55e53-3ddb-4270-b68e-6eb09e7b878e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups/KarbonService.GetClientGroupByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.clientgroup_userdefinedidentifier}}')?$expand=BusinessCard",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups",
                        "KarbonService.GetClientGroupByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.clientgroup_userdefinedidentifier}}')"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCard"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "4a62cabc-deed-41b6-a931-1d3e55a20007"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "1de4299c-a696-467a-a127-145ffd12fa9d"
                      }
                    }
                  ],
                  "id": "6beac7b1-f662-4235-a4d2-fb1db2099194",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search parameterless",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "099bfbfd-199b-41c1-b605-8c155266d926",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "ee3dabc1-eb97-4033-93bc-2cf043f4784f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/ClientGroups"
                  },
                  "response": []
                },
                {
                  "name": "Search with startswith odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains startswith not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'startswith' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "54f8071b-a4fd-4343-aff6-e99b5a985842"
                      }
                    }
                  ],
                  "id": "8cce8b50-3949-4175-bad0-415b466311c6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups?$filter=startswith(FullName, 'A') eq true",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(FullName, 'A') eq true"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with datefunction odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "bf6a9354-5270-4aa3-9096-ea1f935dc011"
                      }
                    }
                  ],
                  "id": "03b509e4-c65c-4c20-8cb6-c714c3682b2b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups?$filter=day(LastModifiedDateTime) eq 8",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(LastModifiedDateTime) eq 8"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "7cf8f3c7-79a3-47fb-b363-e01c6837fc8e"
            },
            {
              "name": "Update (Put)",
              "item": [
                {
                  "name": "#4350 Update Client Group with CRM Fields",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1fc62cf4-507a-4b3a-b7b1-beed741e4766",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "fb2f30c1-b93f-4232-a3ba-9a749ba07b68",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"ContactType\": \"Vendor / Supplier\",\r\n    \"FullName\": \"client group full name update\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.clientgroup_uniqueidentifier}}\",\r\n    \"BusinessCard\": {\r\n        \"IsPrimaryCard\": true,\r\n        \"Addresses\": [\r\n            {\r\n                \"AddressLines\": \"address line test update\",\r\n                \"City\": \"city test update\",\r\n                \"StateProvinceCounty\": \"NSW update\",\r\n                \"ZipCode\": \"2120 update\",\r\n                \"CountryCode\": \"AU\",\r\n                \"Label\": \"Test label update\"\r\n            }\r\n        ],\r\n        \"PhoneNumbers\": [\r\n            {\r\n                \"Number\": \"123456789\",\r\n                \"CountryCode\": \"+61\",\r\n                \"Label\": \"Work update\"\r\n            }\r\n        ],\r\n        \"WebSites\": [\r\n            \"web.coolupdate\",\r\n            \"website.twoupdate\"\r\n            ],\r\n        \"FacebookLink\": \"facebook.com/testupdate\",\r\n        \"LinkedInLink\": \"LinkedIn.com/testupdate\",\r\n        \"TwitterLink\": \"Twitter.com/testupdate\",\r\n        \"SkypeLink\": \"Skype.com/testupdate\"\r\n    },\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description update\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/ClientGroups/{{public.api.clientgroup_permakey}}?$expand=BusinessCard",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "ClientGroups",
                        "{{public.api.clientgroup_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCard"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "aff5d817-2af9-45f8-8b7a-562ef1e4a9e8"
            },
            {
              "name": "Update (Patch)",
              "item": [
                {
                  "name": "Partial Update Client Group",
                  "id": "4efaef7f-9dbd-458b-952d-b3ad45d8a2ec",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FullName\": \"Partial updated client group full name\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/ClientGroups/2h6l6pH488J6"
                  },
                  "response": []
                }
              ],
              "id": "b4bcdb4e-be09-4204-8a44-29bffcb5e5a8"
            }
          ],
          "id": "c85812cd-f6e6-4bc2-afdb-f2cc7b6204cd"
        },
        {
          "name": "Contacts",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "#4350 Create Contact with extra CRM Fields",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b86cb0a4-9236-4c22-ab13-d297fae2441e",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.contact_uniqueidentifier\", generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3c24380-f17c-4a7d-b836-902c6e743a48",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Set contact permakey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.contact_permakey\", jsonData.ContactKey);\r",
                          "    pm.environment.set(\"public.api.contact_userdefinedidentifier\", jsonData.UserDefinedIdentifier);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "eb1fe95c-45dd-40f1-881b-a5419e5fb2c0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FirstName\": \"First\",\r\n    \"MiddleName\": \"Second\",\r\n    \"LastName\": \"Last\",\r\n    \"PreferredName\": \"Preferrred\",\r\n    \"Salutation\": \"Dr\",\r\n    \"Suffix\": \"Of the Test\",\r\n    \"RestrictionLevel\": \"Public\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.contact_uniqueidentifier}}}}\",\r\n    \"BusinessCards\": [\r\n        {\r\n            \"IsPrimaryCard\": true,\r\n            \"Addresses\": [\r\n                {\r\n                    \"AddressLines\": \"address line test\",\r\n                    \"City\": \"city test\",\r\n                    \"StateProvinceCounty\": \"NSW\",\r\n                    \"ZipCode\": \"2120\",\r\n                    \"CountryCode\": \"AU\",\r\n                    \"Label\": \"Test label\"\r\n                }\r\n            ],\r\n            \"PhoneNumbers\": [\r\n                {\r\n                    \"Number\": \"12345678\",\r\n                    \"CountryCode\": \"+61\",\r\n                    \"Label\": \"Work\"\r\n                }\r\n            ],\r\n            \"WebSites\": [\r\n                \"web.cool\",\r\n                \"website.two\"\r\n            ],\r\n            \"EmailAddresses\": [\r\n                \"{{public.api.contact_uniqueidentifier}}@karbonhq.com\"\r\n            ],\r\n            \"RoleOrTitle\": \"CIO\",\r\n            \"FacebookLink\": \"facebook.com/test\",\r\n            \"LinkedInLink\": \"LinkedIn.com/test\",\r\n            \"TwitterLink\": \"Twitter.com/test\",\r\n            \"SkypeLink\": \"Skype.com/test\"\r\n        }\r\n    ],\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description\"\r\n    },\r\n    \"AccountingDetail\": {\r\n        \"BirthDate\": \"2001-05-16\",\r\n        \"DeathDate\": \"2021-05-16\",\r\n        \"Salutation\": \"The Dishonorable\",\r\n        \"Sex\": \"M\",\r\n        \"FinancialYearEndDay\": \"11\",\r\n        \"FinancialYearEndMonth\": \"0\",\r\n        \"LegalName\": \"League of Heels\",\r\n        \"TaxCountryCode\": \"AU\",\r\n        \"IncomeTaxInstallmentPeriod\": \"Monthly\",\r\n        \"RegistrationNumbers\": [\r\n            {\r\n                \"RegistrationNumber\": \"123 321 3445\",\r\n                \"Type\": \"Tax File Number (TFN)\"\r\n            },\r\n            {\r\n                \"RegistrationNumber\": \"444 333 222\",\r\n                \"Type\": \"Australian Business Number (ABN)\"\r\n            }\r\n        ],\r\n        \"Notes\": [\r\n            {\r\n                \"Body\": \"Notes basic body\",\r\n                \"Type\": \"Basic\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes tax body\",\r\n                \"Type\": \"Tax\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes system body\",\r\n                \"Type\": \"System\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes related people body\",\r\n                \"Type\": \"Related People\"\r\n            }\r\n        ]\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Contacts"
                  },
                  "response": []
                },
                {
                  "name": "Create Contact without notes or registration numbers",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "1ca86478-a7de-4674-ba48-057df724bf4e",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.contact_uniqueidentifier\", generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "76b3f9b0-f79b-4eac-a24d-46a1b2aaaf09",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "bfc04902-c47c-46d5-b49e-0874e4481bf7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FirstName\": \"First\",\r\n    \"MiddleName\": \"Second\",\r\n    \"LastName\": \"Last\",\r\n    \"PreferredName\": \"Preferrred\",\r\n    \"Salutation\": \"Dr\",\r\n    \"Suffix\": \"Of the Test\",\r\n    \"RestrictionLevel\": \"Public\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.contact_uniqueidentifier}}}}\",\r\n    \"BusinessCards\": [\r\n        {\r\n            \"IsPrimaryCard\": true,\r\n            \"Addresses\": [\r\n                {\r\n                    \"AddressLines\": \"address line test\",\r\n                    \"City\": \"city test\",\r\n                    \"StateProvinceCounty\": \"NSW\",\r\n                    \"ZipCode\": \"2120\",\r\n                    \"CountryCode\": \"AU\",\r\n                    \"Label\": \"Test label\"\r\n                }\r\n            ],\r\n            \"PhoneNumbers\": [\r\n                {\r\n                    \"Number\": \"12345678\",\r\n                    \"CountryCode\": \"+61\",\r\n                    \"Label\": \"Work\"\r\n                }\r\n            ],\r\n            \"WebSites\": [\r\n                \"web.cool\",\r\n                \"website.two\"\r\n            ],\r\n            \"EmailAddresses\": [\r\n                \"{{public.api.contact_uniqueidentifier}}@karbonhq.com\"\r\n            ],\r\n            \"RoleOrTitle\": \"CIO\",\r\n            \"FacebookLink\": \"facebook.com/test\",\r\n            \"LinkedInLink\": \"LinkedIn.com/test\",\r\n            \"TwitterLink\": \"Twitter.com/test\",\r\n            \"SkypeLink\": \"Skype.com/test\"\r\n        }\r\n    ],\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description\"\r\n    },\r\n    \"AccountingDetail\": {\r\n        \"BirthDate\": \"2001-05-16\",\r\n        \"DeathDate\": \"2021-05-16\",\r\n        \"Salutation\": \"The Dishonorable\",\r\n        \"Sex\": \"M\",\r\n        \"FinancialYearEndDay\": \"11\",\r\n        \"FinancialYearEndMonth\": \"0\",\r\n        \"LegalName\": \"League of Heels\",\r\n        \"TaxCountryCode\": \"AU\",\r\n        \"IncomeTaxInstallmentPeriod\": \"Monthly\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Contacts"
                  },
                  "response": []
                }
              ],
              "id": "ddfbfca0-9c98-489d-89cc-0dc74cefca18"
            },
            {
              "name": "Get By PermaKey",
              "item": [
                {
                  "name": "Get by PermaKey with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "b4c112f2-4c83-4b84-a276-858a64a2740d"
                      }
                    }
                  ],
                  "id": "a5c65c36-e9f2-471d-aa57-30495f3995b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts/{{public.api.contact_permakey}}?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts",
                        "{{public.api.contact_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get by PermaKey",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "067d410b-4001-463d-be50-470336f95e02",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"Business Cards are expanded\", function () {\r",
                          "    const responseJson = pm.response.json();\r",
                          "    var businessCards = responseJson.BusinessCards;\r",
                          "    pm.expect(businessCards.length).to.be.greaterThan(0);\r",
                          "\r",
                          "    // Get First business card and ensure a key exists.\r",
                          "    pm.expect(businessCards[0].BusinessCardKey).to.be.not.empty;\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "4dbf6d49-8ea8-4477-8ab3-af0c53a1034a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts/{{public.api.contact_permakey}}?$expand=BusinessCards",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts",
                        "{{public.api.contact_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCards"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "#4350 Get by PermaKey with Expand CRM fields Create test",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d4d527d1-1b55-463e-b792-f14d94c7d446",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Restriction Level Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.RestrictionLevel).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Suffix Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.Suffix).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Entity Description Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.EntityDescription).to.not.eql(undefined);\r",
                          "    pm.expect(jsonData.EntityDescription.Text).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Contact Social Media Links Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards[0].FacebookLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].LinkedInLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].TwitterLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].SkypeLink).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Accounting Details Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.AccountingDetail).to.not.equal(undefined);\r",
                          "    pm.expect(jsonData.AccountingDetail.ContactPermaKey).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.BirthDate).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.DeathDate).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.Salutation).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.Sex).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.FinancialYearEndDay).to.equal(11);\r",
                          "    pm.expect(jsonData.AccountingDetail.FinancialYearEndMonth).to.equal(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.LegalName).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.TaxCountryCode).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.IncomeTaxInstallmentPeriod).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.AccountingDetail.RegistrationNumbers.length).to.equal(2);\r",
                          "    pm.expect(jsonData.AccountingDetail.Notes.length).to.equal(4);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "76a41b24-9c4e-457e-b888-546f7da1e009",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts/{{public.api.contact_permakey}}?$expand=BusinessCards",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts",
                        "{{public.api.contact_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCards"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "d8e791ee-5e15-4c85-8a8b-8de5f4002ce9"
            },
            {
              "name": "Get by UserDefinedIdentifier",
              "item": [
                {
                  "name": "Get a contact from the supplied User Defined Identifier",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b48d1b05-2fb3-447d-b6ea-f588b0eb64b5",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business Cards aren't loaded without expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards).to.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "42434556-16d9-466b-9fb9-c401128f8c2f",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "143b3126-3723-462e-b178-b112db142459",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/Contacts/KarbonService.GetContactByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.contact_userdefinedidentifier}}')"
                  },
                  "response": [
                    {
                      "id": "339e2254-5d8f-49e6-bd04-0345ba7658c9",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"FirstName\": \"Douglas\",\n \"MiddleName\": \"Noel\",\n \"LastName\": \"Adams\",\n \"PreferredName\": \"Doug\",\n \"Salutation\": \"Mr\",\n \"BusinessCards\": [\n  {\n   \"BusinessCardKey\": \"2xfLMq5PFqb7\",\n   \"IsPrimaryCard\": false,\n   \"Addresses\": [\n    {\n     \"AddressKey\": \"a5867584-687c-4f77-b397-854ae7523403\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"AddressKey\": \"a5867584-687c-4f77-b397-854ae7523403\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"PhoneNumbers\": [\n    {\n     \"PhoneNumberKey\": \"41dfe6a4-efd3-4394-9b41-e5e43624e072\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"PhoneNumberKey\": \"41dfe6a4-efd3-4394-9b41-e5e43624e072\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"WebSites\": [\n    \"https://www.karbonhq.com\"\n   ],\n   \"EmailAddresses\": [\n    \"enquiries@karbonhq.com\"\n   ],\n   \"OrganizationKey\": \"ZGNmtYyLm4z\",\n   \"RoleOrTitle\": \"CEO\"\n  },\n  {\n   \"BusinessCardKey\": \"2xfLMq5PFqb7\",\n   \"IsPrimaryCard\": false,\n   \"Addresses\": [\n    {\n     \"AddressKey\": \"aab4b44b-2e17-4b22-a1ff-795a6998b5b5\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"AddressKey\": \"aab4b44b-2e17-4b22-a1ff-795a6998b5b5\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"PhoneNumbers\": [\n    {\n     \"PhoneNumberKey\": \"dbba71c1-759b-49d5-9ca3-4ad6821f5178\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"PhoneNumberKey\": \"dbba71c1-759b-49d5-9ca3-4ad6821f5178\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"WebSites\": [\n    \"https://www.karbonhq.com\"\n   ],\n   \"EmailAddresses\": [\n    \"enquiries@karbonhq.com\"\n   ],\n   \"OrganizationKey\": \"ZGNmtYyLm4z\",\n   \"RoleOrTitle\": \"CEO\"\n  }\n ],\n \"ClientOwner\": \"myowner@karbonhq.com\",\n \"ClientManager\": \"mymanager@karbonhq.com\",\n \"ContactType\": \"Supplier\",\n \"UserDefinedIdentifier\": \"42\",\n \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8664492Z\",\n \"ContactKey\": \"ZGNmtYyLm4z\"\n}"
                    },
                    {
                      "id": "8ef600e7-5595-4e5a-9be3-ec9618354da5",
                      "name": "UserDefinedIdentifier is missing or empty",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    },
                    {
                      "id": "789c60b8-f6eb-48d8-9bf7-a10886d12f29",
                      "name": "No Contact found for provided UserDefinedIdentifer",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Get a contact from the supplied User Defined Identifier with expand",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "861273bb-6184-4f9a-b95b-a3f4d415f5ca",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business are loaded with expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards).to.not.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "c7639dc0-5eac-47f0-bd5f-7d32e96c35d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts/KarbonService.GetContactByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.contact_userdefinedidentifier}}')?$expand=BusinessCards",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts",
                        "KarbonService.GetContactByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.contact_userdefinedidentifier}}')"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCards"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "87cbdf79-5e87-489c-88a3-7628a9754f02",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"FirstName\": \"Douglas\",\n \"MiddleName\": \"Noel\",\n \"LastName\": \"Adams\",\n \"PreferredName\": \"Doug\",\n \"Salutation\": \"Mr\",\n \"BusinessCards\": [\n  {\n   \"BusinessCardKey\": \"2xfLMq5PFqb7\",\n   \"IsPrimaryCard\": false,\n   \"Addresses\": [\n    {\n     \"AddressKey\": \"a5867584-687c-4f77-b397-854ae7523403\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"AddressKey\": \"a5867584-687c-4f77-b397-854ae7523403\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"PhoneNumbers\": [\n    {\n     \"PhoneNumberKey\": \"41dfe6a4-efd3-4394-9b41-e5e43624e072\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"PhoneNumberKey\": \"41dfe6a4-efd3-4394-9b41-e5e43624e072\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"WebSites\": [\n    \"https://www.karbonhq.com\"\n   ],\n   \"EmailAddresses\": [\n    \"enquiries@karbonhq.com\"\n   ],\n   \"OrganizationKey\": \"ZGNmtYyLm4z\",\n   \"RoleOrTitle\": \"CEO\"\n  },\n  {\n   \"BusinessCardKey\": \"2xfLMq5PFqb7\",\n   \"IsPrimaryCard\": false,\n   \"Addresses\": [\n    {\n     \"AddressKey\": \"aab4b44b-2e17-4b22-a1ff-795a6998b5b5\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"AddressKey\": \"aab4b44b-2e17-4b22-a1ff-795a6998b5b5\",\n     \"AddressLines\": \"2400 Bridgeway, Ste 280\",\n     \"City\": \"Sausalito\",\n     \"StateProvinceCounty\": \"CA\",\n     \"ZipCode\": \"94965\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"PhoneNumbers\": [\n    {\n     \"PhoneNumberKey\": \"dbba71c1-759b-49d5-9ca3-4ad6821f5178\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    },\n    {\n     \"PhoneNumberKey\": \"dbba71c1-759b-49d5-9ca3-4ad6821f5178\",\n     \"Number\": \"+61212345678\",\n     \"CountryCode\": \"US\",\n     \"Label\": \"Work\"\n    }\n   ],\n   \"WebSites\": [\n    \"https://www.karbonhq.com\"\n   ],\n   \"EmailAddresses\": [\n    \"enquiries@karbonhq.com\"\n   ],\n   \"OrganizationKey\": \"ZGNmtYyLm4z\",\n   \"RoleOrTitle\": \"CEO\"\n  }\n ],\n \"ClientOwner\": \"myowner@karbonhq.com\",\n \"ClientManager\": \"mymanager@karbonhq.com\",\n \"ContactType\": \"Supplier\",\n \"UserDefinedIdentifier\": \"42\",\n \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8664492Z\",\n \"ContactKey\": \"ZGNmtYyLm4z\"\n}"
                    },
                    {
                      "id": "453cdab9-4027-4043-ae4f-59f5eb0886c4",
                      "name": "UserDefinedIdentifier is missing or empty",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    },
                    {
                      "id": "8c4753be-2112-43e3-8086-1d8cbaa11c14",
                      "name": "No Contact found for provided UserDefinedIdentifer",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": "{{baseUrl}}/v3/Contacts/GetByUserDefinedIdentifier(userDefinedIdentifier='{{userDefinedIdentifier}}')"
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": ""
                    }
                  ]
                }
              ],
              "id": "92c1ac4e-19ca-4689-91b1-ab0d653bab1a"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search parameterless",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c85b03e-2695-4e94-a629-f4e41de69ffe",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "pm.test(\"Parameterless Query Returns at most 100 Contacts\", function () {\r",
                          "    const responseJson = pm.response.json();    \r",
                          "    pm.expect(responseJson.value.length).to.be.lessThan(101);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Grabbing two Full Names to use in future tests\", function () {\r",
                          "    const responseJson = pm.response.json();    \r",
                          "    pm.expect(responseJson.value.length).to.be.greaterThan(1);\r",
                          "    pm.environment.set(\"public.api.search_test_contact1_fullname\", responseJson.value[0].FullName);\r",
                          "    pm.environment.set(\"public.api.search_test_contact2_fullname\", responseJson.value[1].FullName);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "a975f37d-5b61-4458-8bbd-1319df5df2d9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/Contacts"
                  },
                  "response": []
                },
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "b8b4dbfb-6235-4e17-b521-247c5f6c5602"
                      }
                    }
                  ],
                  "id": "3440aa3c-e962-4653-9da0-39ddf7f1b919",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with startswith odata attribute",
                  "id": "bf1b038c-9858-42d9-9f20-4a92bdfa3d65",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts?$filter=startswith(EmailAddress, 'james')",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(EmailAddress, 'james')"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "791164cb-5b00-4fc5-8356-0e30737c6a02",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                },
                {
                  "name": "Search with datefunction odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "d807ab42-22ec-475c-adfb-b08a4d70a71b"
                      }
                    }
                  ],
                  "id": "7f30a192-6172-4424-96b7-0e7e57593b6a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts?$filter=day(LastModifiedDateTime) eq 8",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(LastModifiedDateTime) eq 8"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with Greater than odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Logical operator not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Logical operator 'NotEqual' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "81cf3fc0-620d-4405-a6af-a6106d2dfd45"
                      }
                    }
                  ],
                  "id": "36c7fe68-c3ff-4d30-ad7a-b5abaf16fca5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts?$filter=PhoneNumber ne '10'",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "PhoneNumber ne '10'"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search contacts by FullName",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0315d2fc-9d9e-4dc2-abb3-dd6d2916fe72",
                        "exec": [
                          "pm.test(\"Status code is OK (200)\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Set contact permakey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.be.greaterThan(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2fda4c15-28f0-481a-a4cf-af6ae7a4f193",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts?$filter=FullName eq '{{public.api.search_test_contact1_fullname}}'",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "FullName eq '{{public.api.search_test_contact1_fullname}}'"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "57cbf28c-9afc-46d2-b755-9a600247486d"
            },
            {
              "name": "Update (Put)",
              "item": [
                {
                  "name": "#4350 Update Contact with extra CRM Fields",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b86cb0a4-9236-4c22-ab13-d297fae2441e",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.contact_uniqueidentifier\", generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3c24380-f17c-4a7d-b836-902c6e743a48",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "f33be3c2-73a3-4a34-88a8-5d425311944b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FirstName\": \"First update\",\r\n    \"MiddleName\": \"Second update\",\r\n    \"LastName\": \"Last update\",\r\n    \"PreferredName\": \"Preferrred update\",\r\n    \"Salutation\": \"Dr\",\r\n    \"Suffix\": \"Of the Test update\",\r\n    \"RestrictionLevel\": \"Public\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.contact_uniqueidentifier}}\",\r\n    \"BusinessCards\": [\r\n        {\r\n            \"IsPrimaryCard\": true,\r\n            \"Addresses\": [\r\n                {\r\n                    \"AddressLines\": \"address line test update\",\r\n                    \"City\": \"city test update\",\r\n                    \"StateProvinceCounty\": \"NSW update\",\r\n                    \"ZipCode\": \"2120 update\",\r\n                    \"CountryCode\": \"AU\",\r\n                    \"Label\": \"Test label update\"\r\n                }\r\n            ],\r\n            \"PhoneNumbers\": [\r\n                {\r\n                    \"Number\": \"12345678\",\r\n                    \"CountryCode\": \"+61\",\r\n                    \"Label\": \"Work update\"\r\n                }\r\n            ],\r\n            \"WebSites\": [\r\n                \"web.coolupdate\",\r\n                \"website.twoupdate\"\r\n            ],\r\n            \"EmailAddresses\": [\r\n                \"{{public.api.contact_uniqueidentifier}}@karbonhq.com\"\r\n            ],\r\n            \"RoleOrTitle\": \"CIO\",\r\n            \"FacebookLink\": \"facebook.com/testupdate\",\r\n            \"LinkedInLink\": \"LinkedIn.com/testupdate\",\r\n            \"TwitterLink\": \"Twitter.com/testupdate\",\r\n            \"SkypeLink\": \"Skype.com/testupdate\"\r\n        }\r\n    ],\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description update\"\r\n    },\r\n    \"AccountingDetail\": {\r\n        \"ContactPermaKey\": \"{{public.api.contact_permakey}}\",\r\n        \"BirthDate\": \"2001-05-16\",\r\n        \"DeathDate\": \"2021-05-16\",\r\n        \"Salutation\": \"The Dishonorable update\",\r\n        \"Sex\": \"M\",\r\n        \"FinancialYearEndDay\": \"11\",\r\n        \"FinancialYearEndMonth\": \"0\",\r\n        \"LegalName\": \"League of Heels update\",\r\n        \"TaxCountryCode\": \"AU\",\r\n        \"IncomeTaxInstallmentPeriod\": \"Monthly\",\r\n        \"RegistrationNumbers\": [\r\n            {\r\n                \"RegistrationNumber\": \"123 321 3445\",\r\n                \"Type\": \"Tax File Number (TFN)\"\r\n            },\r\n            {\r\n                \"RegistrationNumber\": \"444 333 222\",\r\n                \"Type\": \"Australian Business Number (ABN)\"\r\n            }\r\n        ],\r\n        \"Notes\": [\r\n            {\r\n                \"Body\": \"Notes basic body update\",\r\n                \"Type\": \"Basic\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes tax body update\",\r\n                \"Type\": \"Tax\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes system body update\",\r\n                \"Type\": \"System\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes related people body update\",\r\n                \"Type\": \"Related People\"\r\n            }\r\n        ]\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Contacts/{{public.api.contact_permakey}}?$expand=BusinessCard",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Contacts",
                        "{{public.api.contact_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCard"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "36b3bc3d-d8f5-4db3-88f3-535d7afa8243"
            },
            {
              "name": "Update (Patch)",
              "item": [],
              "id": "97627977-40f3-4a4f-a1ef-8aa37a61fb54"
            }
          ],
          "id": "6296cbb5-719a-4c0b-911a-bba441b61b48"
        },
        {
          "name": "Files",
          "item": [
            {
              "name": "Create",
              "item": [],
              "id": "9775015b-d1cc-4a50-9e67-f660cdc25159"
            }
          ],
          "id": "ebee3ace-68e0-4465-b35a-3b547da4bdc1"
        },
        {
          "name": "Notes",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "Create Note",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c0b157e4-e10e-4953-9315-22bd5ef22780",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "40221808-de29-4aba-b998-6b4b298ec00c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "{{publicapi.authorization}}"
                      },
                      {
                        "key": "AccessKey",
                        "type": "text",
                        "value": "{{publicapi.accesskey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\":\"james@karbonhq.com\",\r\n    \"AuthorEmailAddress\": \"james@karbonhq.com\",\r\n    \"Body\": \"{Your note body here}\",\r\n    \"DueDate\": \"2021-03-11T15:12:55+11:00\",\r\n    \"Subject\": \"{Your subject header here}\",\r\n    \"TodoDate\": \"2021-03-11T15:12:55+11:00\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Notes"
                  },
                  "response": [
                    {
                      "id": "048468b9-3768-45cf-a7a6-3affe95ec016",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                }
              ],
              "id": "49fa4c02-4d6f-4df7-8ac3-5ef90ed4ed24"
            }
          ],
          "id": "53524b60-e32d-47e5-944c-f1ae44c606bf"
        },
        {
          "name": "Organizations",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "#4350 Create Organization with CRM Fields",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4345faa4-39ca-46e9-bcd0-2b26cc04be86",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.organization_uniqueidentifier\", generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "ebb4c896-ea10-4a3d-9562-81dff4bd0786",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Set organization permakey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.organization_permakey\", jsonData.OrganizationKey);\r",
                          "    pm.environment.set(\"public.api.test_organization_userdefinedidentifier\", jsonData.UserDefinedIdentifier);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "8b26a3f4-5213-4dc7-84a8-ce83d679bebd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FullName\": \"Full Name Test\",\r\n    \"RestrictionLevel\": \"Public\",\r\n    \"ContactType\": \"Prospect\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.organization_uniqueidentifier}}\",\r\n    \"BusinessCards\": [\r\n        {\r\n            \"IsPrimaryCard\": true,\r\n            \"Addresses\": [\r\n                {\r\n                    \"AddressLines\": \"address line test\",\r\n                    \"City\": \"city test\",\r\n                    \"StateProvinceCounty\": \"NSW\",\r\n                    \"ZipCode\": \"2120\",\r\n                    \"CountryCode\": \"AU\",\r\n                    \"Label\": \"Test label\"\r\n                }\r\n            ],\r\n            \"PhoneNumbers\": [\r\n                {\r\n                    \"Number\": \"12345678\",\r\n                    \"CountryCode\": \"+61\",\r\n                    \"Label\": \"Work\"\r\n                }\r\n            ],\r\n            \"WebSites\": [\r\n                \"web.cool\",\r\n                \"website.two\"\r\n            ],\r\n            \"EmailAddresses\": [\r\n                \"{{public.api.organization_uniqueidentifier}}@karbonhq.com\"\r\n            ],\r\n            \"RoleOrTitle\": \"CIO\",\r\n            \"FacebookLink\": \"facebook.com/test\",\r\n            \"LinkedInLink\": \"LinkedIn.com/test\",\r\n            \"TwitterLink\": \"Twitter.com/test\",\r\n            \"SkypeLink\": \"Skype.com/test\"\r\n        }\r\n    ],\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description\"\r\n    },\r\n\"AccountingDetail\": {\r\n        \"LegalName\": \"Oranization Details\",\r\n        \"TaxCountryCode\": \"AU\",\r\n        \"EntityType\": \"Partnership\",\r\n        \"IncorporationDate\": \"2021-05-16\",\r\n        \"LineOfBusiness\": \"Fast moving socks\",\r\n        \"AnnualRevenue\": 60000.50,\r\n        \"OrganizationValuation\": 120000.50,\r\n        \"Sells\": \"Products\",\r\n        \"RevenueModel\": \"Markup\",\r\n        \"FinancialYearEndMonth\": 2,\r\n        \"FinancialYearEndDay\": 11,\r\n        \"GstPeriod\": \"Monthly\",\r\n        \"IncomeTaxInstallmentPeriod\": \"Quarterly\",\r\n        \"GstBasis\": \"Invoice\",\r\n        \"RegistrationNumbers\": [\r\n            {\r\n                \"RegistrationNumber\": \"123 321 3445\",\r\n                \"Type\": \"Tax File Number (TFN)\"\r\n            },\r\n            {\r\n                \"RegistrationNumber\": \"444 333 222\",\r\n                \"Type\": \"Australian Company Number (ACN)\"\r\n            },\r\n            {\r\n                \"RegistrationNumber\": \"444 333 222\",\r\n                \"Type\": \"Australian Business Number (ABN)\"\r\n            }\r\n        ],\r\n        \"Notes\": [\r\n            {\r\n                \"Body\": \"Notes basic body\",\r\n                \"Type\": \"Basic\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes tax body\",\r\n                \"Type\": \"Tax\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes system body\",\r\n                \"Type\": \"System\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes Owner body\",\r\n                \"Type\": \"Owner\"\r\n            },\r\n            {\r\n                \"Body\": \"Notes Officer body\",\r\n                \"Type\": \"Officer\"\r\n            }\r\n        ]\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Organizations"
                  },
                  "response": []
                }
              ],
              "id": "90efd432-6739-4d8c-80b4-dfa404831723"
            },
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "Get by PermaKey with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "f9e68cfa-ab58-4959-b526-e1f16d9a764b"
                      }
                    }
                  ],
                  "id": "aef1ec15-ef18-45cb-8d0e-344e2322d2d6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations/{{public.api.organization_permakey}}?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations",
                        "{{public.api.organization_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get by PermaKey",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70420c20-f6dc-4ad1-b819-39372cf1f7f9",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Assert correct organization is returned\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.OrganizationKey).to.be.eql(pm.environment.get(\"public.api.organization_permakey\"));\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "14d8ea4b-db69-4e01-9cce-bf67672170ed",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/Organizations/{{public.api.organization_permakey}}"
                  },
                  "response": []
                },
                {
                  "name": "#4350 Get by PermaKey with Expand CRM Fields Create test",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "62e6d16f-4374-45ce-8fdc-f2313c527369",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Restriction Level Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.RestrictionLevel).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Entity Description Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.EntityDescription).to.not.eql(undefined);\r",
                          "    pm.expect(jsonData.EntityDescription.Text).length.greaterThan(0);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Contact Social Media Links Test\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards[0].FacebookLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].LinkedInLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].TwitterLink).length.greaterThan(0);\r",
                          "    pm.expect(jsonData.BusinessCards[0].SkypeLink).length.greaterThan(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "940c009c-88fb-4113-8fed-40be4639645c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations/{{public.api.organization_permakey}}?$expand=BusinessCards\n",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations",
                        "{{public.api.organization_permakey}}"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCards\n"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "e3d225e7-c238-4c4c-940c-ec7a0afb4318"
            },
            {
              "name": "Get by UserDefinedIdentifier",
              "item": [
                {
                  "name": "Get by User Defined Identifier",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f4c5aa0c-e18f-48fd-a274-d6160538ab60",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business are not loaded without expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards).to.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9cbdcaf3-b733-4788-ab9d-ac26a372acec",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/Organizations/KarbonService.GetOrganizationByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.test_organization_userdefinedidentifier}}')"
                  },
                  "response": []
                },
                {
                  "name": "Get by User Defined Identifier with Expand",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0222e44a-b96d-4bce-bb20-6c5c2a4f44b6",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Business are loaded with expand\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.BusinessCards).to.not.eql(undefined);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "055267f5-fb15-49dd-9cfa-ddf1aa89dde1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations/KarbonService.GetOrganizationByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.test_organization_userdefinedidentifier}}')?$expand=BusinessCards",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations",
                        "KarbonService.GetOrganizationByUserDefinedIdentifier(UserDefinedIdentifier='{{public.api.test_organization_userdefinedidentifier}}')"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "BusinessCards"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "fe14baa7-448a-4a41-8fc9-76cc5ad9e714"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search Organizations",
                  "id": "81e89edf-ec04-4b8b-a7c7-d8cd55edcc33",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/Organizations"
                  },
                  "response": [
                    {
                      "id": "e05db5fa-3863-4c9b-8406-0293c2c30b91",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                },
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "505c3e77-4e81-4d41-89a4-bc8b855ba5b7"
                      }
                    }
                  ],
                  "id": "cedc290b-30db-4c9c-ac76-bdf40d20d3ff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with startswith odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains startswith not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'startswith' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "f8b358b7-edaf-4371-8e20-5b2201738101"
                      }
                    }
                  ],
                  "id": "7e54c545-b6ba-4004-89a6-3c3f4a929991",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations?$filter=startswith(FullName, 'test')",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(FullName, 'test')"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with day operator odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "424333ac-448c-4e5d-a4b4-d884a9a573a6"
                      }
                    }
                  ],
                  "id": "4a1185c1-4ee5-4dae-a372-83e931869232",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations?$filter=day(LastModifiedDateTime) eq 8",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(LastModifiedDateTime) eq 8"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with logical operator odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains not equal not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Logical operator 'NotEqual' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "2ea90424-c04e-4bd1-a07c-8f79d35730e3"
                      }
                    }
                  ],
                  "id": "929448ef-3e2e-4773-ac6f-8a288d7a31b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Organizations?$filter=FullName ne 'test'",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Organizations"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "FullName ne 'test'"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "e313f6d9-823f-4f51-96f4-bb06fcd7d558"
            },
            {
              "name": "Update (Put)",
              "item": [
                {
                  "name": "#4350 Update Organization with CRM Fields",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4345faa4-39ca-46e9-bcd0-2b26cc04be86",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedUUID = uuid.v4(); \r",
                          "pm.environment.set(\"public.api.organization_uniqueidentifier\", generatedUUID);\r",
                          "console.log(generatedUUID);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "ebb4c896-ea10-4a3d-9562-81dff4bd0786",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "fa6788b0-cf5d-40bb-a1e3-da360ebad44a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"FullName\": \"Full Name Test update\",\r\n    \"RestrictionLevel\": \"Public\",\r\n    \"ContactType\": \"Prospect\",\r\n    \"UserDefinedIdentifier\": \"{{public.api.organization_permakey}}\",\r\n    \"EntityDescription\": {\r\n        \"Text\": \"test description update\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Organizations/{{public.api.organization_permakey}}"
                  },
                  "response": []
                }
              ],
              "id": "7e8a427c-83f8-4084-bee1-1d18fa92e917"
            },
            {
              "name": "Update (Patch)",
              "item": [],
              "id": "6a7cc275-dd44-4649-9fba-a59f6e06647a"
            }
          ],
          "id": "273d5dea-5f0d-49e2-bc6d-f4361ec83ac1"
        },
        {
          "name": "Status",
          "item": [
            {
              "name": "Ping",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"pong\");\r",
                      "});"
                    ],
                    "type": "text/javascript",
                    "id": "efc182a1-432e-4078-9b8b-65c752a2cfa2"
                  }
                }
              ],
              "id": "9ea7a662-a227-42af-973a-e694be75c234",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{public.api.v3baseurl}}/api/ping"
              },
              "response": []
            },
            {
              "name": "Status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"Body matches string\", function () {\r",
                      "    pm.expect(pm.response.text()).to.include(\"MachineName\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "cea47651-f78b-4e9c-a14b-76a49c2b74fd"
                  }
                }
              ],
              "id": "1b590996-33f2-4028-9fe1-2b515372eae2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "{{public.api.v3baseurl}}/api/apistatus"
              },
              "response": []
            }
          ],
          "id": "2c27a047-d936-4773-aa85-73da8be5da30"
        },
        {
          "name": "Timesheets",
          "item": [
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "Search with datefunction odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "e442c8e8-3a54-44f5-b4f2-13afc24aad15"
                      }
                    }
                  ],
                  "id": "fe2243a7-379e-4245-8a5f-260fe7ee5ace",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Timesheets?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Timesheets"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "c456d8f4-32f9-4be8-bdb6-929d914f65e7"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "11a514df-c1ed-4b54-96d5-bfd884149383"
                      }
                    }
                  ],
                  "id": "f077c175-697f-43df-8038-b6b5764e82cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Timesheets?$select=Status",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Timesheets"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "Status"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with day operator odata attribute Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "0803ae65-1ac2-4bab-ab8a-06cb1f72bab7"
                      }
                    }
                  ],
                  "id": "a768a060-5d34-41ce-8699-0f63f740c0b6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Timesheets?$filter=day(StartDate) eq 8",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Timesheets"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(StartDate) eq 8"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "291d2166-d9c4-47b2-ba69-5c361edea92d"
            }
          ],
          "id": "ebcbd483-451f-4b3b-86bc-757f60fa244d"
        },
        {
          "name": "User",
          "item": [
            {
              "name": "List",
              "item": [
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "deb562af-48a8-4015-8091-370726a16279"
                      }
                    }
                  ],
                  "id": "70d3d83e-bc8c-4f25-80ee-2ac15c1ce133",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/Users?$select=FullName",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "Users"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FullName"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "b6106690-d142-493f-ae0d-d36018b4b510"
            },
            {
              "name": "Create",
              "item": [
                {
                  "name": "Create User V3",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "44a1efc4-a8bf-49fd-a910-246e483f4016",
                        "exec": [
                          "var uuid = require('uuid');\r",
                          "var generatedEmail = uuid.v4() + \"@gmail.com\"; \r",
                          "var generatedName = uuid.v4(); \r",
                          "\r",
                          "pm.environment.set(\"public.api.contact_test_user_generatedemail\", generatedEmail);\r",
                          "pm.environment.set(\"public.api.contact_test_user_generatedname\", generatedName);\r",
                          "\r",
                          "console.log(generatedEmail);\r",
                          "console.log(generatedName);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "6466f10a-bb64-43d4-8943-e4525118e0f2",
                        "exec": [
                          "pm.test(\"Status code is Created (201)\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "5fa0b3e2-bbf0-4454-bc2e-ef3d26f9bcaf",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"Name\": \"{{public.api.contact_test_user_generatedemail}}\",\r\n    \"EmailAddress\": \"{{public.api.contact_test_user_generatedname}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/Users"
                  },
                  "response": []
                }
              ],
              "id": "335fd32d-c4a8-44c1-aaf3-5e8a6dbc52fe"
            }
          ],
          "id": "15c92b1c-e17a-4405-91bd-65023748dc31"
        },
        {
          "name": "WebhookSubscriptions",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "SetTargetUrl",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "adab9176-e2aa-4af6-b1a4-7a8defeb3379",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Target Url is set\", function () {\r",
                          "    const responseJson = pm.response.json();\r",
                          "    pm.expect(responseJson.TargetUrl).to.be.not.empty;\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9ea29b2f-8ca4-40f9-9f4e-bf798f2b4566",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"TargetUrl\": \"https://hooks.zapier.com/hooks/catch/3550924/ovsbqn4/\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WebhookSubscriptions"
                  },
                  "response": [
                    {
                      "id": "9f9d3c5d-3b90-463b-9a73-8f8a708f8743",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                }
              ],
              "id": "e368d213-812f-4209-a50e-baf6ef8ddfa6"
            },
            {
              "name": "Get",
              "item": [
                {
                  "name": "GetWebhookSubscription",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "615d5a97-d782-4b60-ad16-2f2982f26336",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "b4efcf17-a529-4a3a-b809-e95bb6cc90ad",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WebhookSubscriptions"
                  },
                  "response": [
                    {
                      "id": "8c275328-a736-4367-94c0-18e87cd4cc11",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                }
              ],
              "id": "85028589-628e-46d6-a494-523984038f9a"
            },
            {
              "name": "Delete",
              "item": [
                {
                  "name": "Delete WebhookSubscription",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3752b00c-1e69-4a90-bc16-ecc242b85fd6",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "a5015f87-04a6-42b6-b0fd-ab5d0913d6b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WebhookSubscriptions"
                  },
                  "response": []
                }
              ],
              "id": "cc66fcb9-a4fa-418e-97f0-013bbbbaaa16"
            }
          ],
          "id": "af24e8c3-ead5-41be-a65d-406e08f69657"
        },
        {
          "name": "WorkItems",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "#5170 Create WorkItem with Basic work fields",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dfaca174-da31-4366-8eac-f73503ab0630",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "851ac187-56a4-4f98-be60-59067c31fb7f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Test Template Work Item\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-18\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                },
                {
                  "name": "Create WorkItem from Template",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "019ec674-63e1-49f4-871b-78a7497ab461",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "f56b7778-994f-4fe9-8941-3e3798a29061",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Template full test\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-19\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\",\r\n    \"WorkTemplateKey\": \"{{public.api.worktemplatekey}}\",\r\n    \"UserRoleAssignments\": [\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor1}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user1}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor2}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user2}}\"\r\n        },\r\n                {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor3}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user3}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor4}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user4}}\"\r\n        }\r\n    ],\r\n    \"ClientTaskRecipients\": []\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                },
                {
                  "name": "BUGTEST - Create WorkItem from Template with no ClientTaskRecipients property",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4d541a50-2e83-4e81-b3f0-1c59c7c97adb",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "601b6d9a-97de-4e4b-bab1-2b56224a1466",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Template full test\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-19\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\",\r\n    \"WorkTemplateKey\": \"{{public.api.worktemplatekey}}\",\r\n    \"UserRoleAssignments\": [\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor1}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user1}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor2}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user2}}\"\r\n        },\r\n                {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor3}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user3}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor4}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user4}}\"\r\n        }\r\n    ]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                },
                {
                  "name": "BUGTEST - Create WorkItem from Template with empty ClientTaskRecipients array property",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "382a2aa8-9fb7-4a65-95ad-6aae5379d83a",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "fbaebc64-5919-4717-a2f4-233103df1d94",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Template full test\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-19\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\",\r\n    \"WorkTemplateKey\": \"{{public.api.worktemplatekey}}\",\r\n    \"UserRoleAssignments\": [\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor1}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user1}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor2}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user2}}\"\r\n        },\r\n                {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor3}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user3}}\"\r\n        },\r\n        {\r\n            \"RoleKey\": \"{{public.api.worktemplate_actor4}}\",\r\n            \"UserProfileKey\": \"{{public.api.worktemplate_user4}}\"\r\n        }\r\n    ],\r\n    \"ClientTaskRecipients\": []\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                },
                {
                  "name": "BUGTEST - Create WorkItem without template and no ClientTaskRecipients",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27f962db-5631-4c78-9ba9-9d9e3e4e8c65",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "311f9ee3-8e50-45b6-a1a9-2c225850c4d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Template full test\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-19\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                },
                {
                  "name": "BUGTEST - Create WorkItem without template and ClientTaskRecipients",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d468dd97-4a9f-419b-b202-61ed99d4aeb4",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitem PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitem_permakey\", jsonData.WorkItemKey);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "af9784a0-971b-4d70-97af-e1fe3acb173a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"Title\": \"Template full test\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"StartDate\": \"2021-07-11\",\r\n    \"DueDate\": \"2021-07-19\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"Description\": \"Test description\",\r\n    \"ClientTaskRecipients\": []\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": []
                }
              ],
              "id": "5694298d-0d43-44b8-ae29-ad4b13a47fa4"
            },
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "#5170 Get by PermaKey with basic work fields Expand",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "79eda62c-9da2-42f2-88ab-2d4b9bccf167",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "cfdee4fa-5f07-4148-b03e-ee27cb7fb0c2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WorkItems/{{public.api.workitem_permakey}}"
                  },
                  "response": []
                },
                {
                  "name": "Get by PermaKey with select odata attribute should fail",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "c10e1359-d4d0-4757-a0b9-df12791feddb"
                      }
                    }
                  ],
                  "id": "524b31d3-5f2d-494a-b55b-994409b05319",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$select=AssigneeEmailAddress",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "AssigneeEmailAddress"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get WorkItem by wrong PermaKey Should 404",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fd9b4fa-78fe-4b75-96ec-8823dfa0fa95",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(404);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2e59d031-92c2-477c-97e1-4852b4d8a032",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "{{publicapi.authorization}}"
                      },
                      {
                        "key": "AccessKey",
                        "type": "text",
                        "value": "{{publicapi.accesskey}}"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WorkItems/2LYmL87JdSVV"
                  },
                  "response": [
                    {
                      "id": "de0de68f-9ee1-43fb-a88d-6a3a5e23bab5",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                }
              ],
              "id": "6fa79f32-8a93-4d4e-95f3-fcca62ea1035"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search WorkItems",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c6232-7220-45b6-b6af-98a45dbf01ac",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Check work items were found\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.gte(0);    \r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9749fa45-70db-4dcb-9591-dc7bd88f67c8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$filter=AssigneeEmailAddress eq '{{public.api.workitem_useremail}}' and ClientKey eq '{{public.api.workitem_clientkey}}'",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "AssigneeEmailAddress eq '{{public.api.workitem_useremail}}' and ClientKey eq '{{public.api.workitem_clientkey}}'"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "d3f253aa-0d7b-4e6b-90df-7cc5ebbfa529",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                },
                {
                  "name": "Search WorkItems without filters",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c11d3072-be73-4168-a239-0fe0597f7c50",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Check work items were found\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.gte(0);    \r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "34be2486-cf88-45d0-9e46-3132fdfe2abe",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WorkItems"
                  },
                  "response": [
                    {
                      "id": "23a00e9f-2cd0-4684-8622-7c5f36f47e8c",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                },
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "b3f59dbd-bf52-4194-8142-7f0c25ab53eb"
                      }
                    }
                  ],
                  "id": "321b1863-b22d-417f-9f88-45d28e300952",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$select=AssigneeEmailAddress",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "AssigneeEmailAddress"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with day function odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "8fa90a03-3b0c-4da0-9c8b-acf706a36666"
                      }
                    }
                  ],
                  "id": "3938c0d3-ddff-4075-a8de-c896eed5a647",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$filter=day(StartDate) eq 8",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(StartDate) eq 8"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with startswith odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains startswith not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'startswith' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "b33f286d-534c-4db9-ad24-073ee446c8a3"
                      }
                    }
                  ],
                  "id": "a8227681-50fb-4c38-9eeb-ac5c9a8e36f5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$filter=startswith(AssigneeEmailAddress,'test')",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(AssigneeEmailAddress,'test')"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "#5170 Search for WorkItems with Basic Work Item fields Start Date filters",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6ea116ff-3349-499f-805c-a17494572391",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Check work items were found\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.gte(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "9b92b4d1-d084-4b73-bb2f-86707400edf4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$filter=ClientKey eq '{{public.api.workitem_clientkey}}' and StartDate ge 2020-06-30 and StartDate le 2050-06-30",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "ClientKey eq '{{public.api.workitem_clientkey}}' and StartDate ge 2020-06-30 and StartDate le 2050-06-30"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search for WorkItems with Basic Work Item fields WorkStatus",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "02ddb095-25a1-4495-8ff8-37ad74bbc799",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Check work items were found\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.gte(0);   \r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "c42f3cb4-395a-448e-be29-6fe3c09a500c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkItems?$filter=WorkStatus eq 'Completed'",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkItems"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "WorkStatus eq 'Completed'"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "1e9dbab5-5ef9-475a-9368-b31dd69acc3c"
            },
            {
              "name": "Update (Put)",
              "item": [
                {
                  "name": "#5170 Update WorkItem",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dac313c5-8c50-4fb7-ac4f-05a807edffe7",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "16514fb7-d5bb-45f3-b149-12c9860bb663",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "{{publicapi.authorization}}"
                      },
                      {
                        "key": "AccessKey",
                        "type": "text",
                        "value": "{{publicapi.accesskey}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"WorkItemKey\": \"{{public.api.workitem_permakey}}\",\r\n    \"Title\": \"Test update work item\",\r\n    \"Description\": \"test Update Description\",\r\n    \"ClientKey\": \"{{public.api.workitem_clientkey}}\",\r\n    \"ClientType\": \"Contact\",\r\n    \"RelatedClientGroupKey\": \"{{public.api.workitem_relatedclientgroupkey}}\",\r\n    \"AssigneeEmailAddress\": \"{{public.api.workitem_useremail}}\",\r\n    \"StartDate\": \"2021-05-14T00:00:00+10:00\",\r\n    \"DueDate\": \"2021-05-21T00:00:00+10:00\",\r\n    \"WorkType\": \"Payroll\",\r\n    \"ToDoPeriod\": \"2021-05-14T00:00:00+10:00\",\r\n    \"WorkTemplateKey\": null,\r\n    \"WorkTemplateTile\": null,\r\n    \"WorkScheduleKey\": null\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkItems/{{public.api.workitem_permakey}}"
                  },
                  "response": [
                    {
                      "id": "b6c9d80d-2a76-4fbd-b7f4-c5a20aaf26a3",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                }
              ],
              "id": "ac6a8f36-cb6d-4951-8f3e-5bb1dcc9186f"
            },
            {
              "name": "Update (Patch)",
              "item": [],
              "id": "cd547bc6-7802-4e67-9446-45aedea4f4d7"
            }
          ],
          "id": "33b5840c-58b3-4686-9cb7-7bf8e6095c73"
        },
        {
          "name": "WorkSchedules",
          "item": [
            {
              "name": "Create",
              "item": [
                {
                  "name": "#5170 Create WorkSchedule from work item",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "cc5edfb9-602b-4fc6-9267-4fcd0bc425d1",
                        "exec": [
                          "pm.test(\"Status code is 201\", function () {\r",
                          "    pm.response.to.have.status(201);\r",
                          "});\r",
                          "pm.test(\"Set workitemschedule PermaKey\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.environment.set(\"public.api.workitemschedule_permakey\", jsonData.WorkScheduleKey);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "273fd4de-25de-4b36-9644-85be7d745383",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"CreatedFromWorkItemKey\": \"{{public.api.workitem_permakey}}\",\r\n    \"RecurrenceFrequency\": \"Quarter\",\r\n    \"CustomFrequencyUnits\": \"Days\",\r\n    \"CustomFrequencyMultiple\": 1,\r\n    \"ScheduleStartDate\": \"2021-07-01\",\r\n    \"ScheduleEndDate\": \"2021-09-01\",\r\n    \"ScheduleDueDateMethod\": \"DaysFromStartDate\",\r\n    \"ScheduleDueDateDays\": 7,\r\n    \"ScheduleDueDateMonthMultiple\": null,\r\n    \"PreventStartEndOnWeekend\": true,\r\n    \"InitializeBeforeStartDateUnits\": \"Days\",\r\n    \"InitializeBeforeStartDateMultiple\": 3,\r\n    \"InitializeTasksBeforeStartDateUnits\": \"Days\",\r\n    \"InitializeTasksBeforeStartDateMultiple\": 2,\r\n    \"WorkItemTitleDefinition\": \"[{\\\"Text\\\":\\\"Test for Public API\\\",\\\"Variable\\\":null,\\\"Format\\\":null,\\\"Offset\\\":0}]\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkSchedules"
                  },
                  "response": []
                }
              ],
              "id": "2ba3561b-3404-42d5-a162-1f66ce26d163"
            },
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "f94831e2-e066-4f06-9214-df7f5f7b00ff"
                      }
                    }
                  ],
                  "id": "d0086659-64c6-487e-9ae0-bf18c66f0b28",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkSchedules/2Tlgtl5sjmNL?$select=FrequencyDescription",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkSchedules",
                        "2Tlgtl5sjmNL"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "FrequencyDescription"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with expand odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains expand function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Expand' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "6e8db77b-6367-4334-90b4-93166bbe4021"
                      }
                    }
                  ],
                  "id": "456384f5-7406-4da8-bab1-4bfb85dd65a6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkSchedules/2Tlgtl5sjmNL?$expand=ClientType",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkSchedules",
                        "2Tlgtl5sjmNL"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "ClientType"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "#5170 Get WorkSchedule by Permakey",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "65feb1e4-5d04-4498-8efd-800c1e6067b3",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "2b2d4564-822f-4c98-8476-8f03d29eea16",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WorkSchedules/{{public.api.workitemschedule_permakey}}"
                  },
                  "response": []
                }
              ],
              "id": "08583412-188e-4ada-a41e-65d86c4e7770"
            },
            {
              "name": "Update",
              "item": [
                {
                  "name": "#5170 Update Work Schedule",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e58b8099-d882-4d58-8bf7-506bad3329f4",
                        "exec": [
                          "pm.test(\"Status code is 204\", function () {\r",
                          "    pm.response.to.have.status(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "804b8635-8de0-488c-a8d3-33a3006e9847",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"WorkScheduleKey\": \"{{public.api.workitemschedule_permakey}}\",\r\n    \"CreatedFromWorkItemKey\": \"{{public.api.workitem_permakey}}\",\r\n    \"RecurrenceFrequency\": \"Quarter\",\r\n    \"CustomFrequencyUnits\": \"Days\",\r\n    \"CustomFrequencyMultiple\": 1,\r\n    \"ScheduleStartDate\": \"2021-07-01\",\r\n    \"ScheduleEndDate\": \"2021-09-01\",\r\n    \"ScheduleDueDateMethod\": \"DaysFromStartDate\",\r\n    \"ScheduleDueDateDays\": 7,\r\n    \"ScheduleDueDateMonthMultiple\": null,\r\n    \"PreventStartEndOnWeekend\": true,\r\n    \"InitializeBeforeStartDateUnits\": \"Days\",\r\n    \"InitializeBeforeStartDateMultiple\": 3,\r\n    \"InitializeTasksBeforeStartDateUnits\": \"Days\",\r\n    \"InitializeTasksBeforeStartDateMultiple\": 2,\r\n    \"WorkItemTitleDefinition\": \"[{\\\"Text\\\":\\\"Test for Public API\\\",\\\"Variable\\\":null,\\\"Format\\\":null,\\\"Offset\\\":0}]\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{public.api.baseurl}}/v3/WorkSchedules/{{public.api.workitemschedule_permakey}}"
                  },
                  "response": []
                }
              ],
              "id": "107ec326-9d2c-4c18-9a6c-8dabe403be41"
            }
          ],
          "id": "9a47ffbf-67d2-45ba-9b57-d13e6b7e1072"
        },
        {
          "name": "WorkTemplates",
          "item": [
            {
              "name": "Get by PermaKey",
              "item": [
                {
                  "name": "Get By Permakey",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66380a5d-83d7-4908-84c2-550813117df4",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "ae9ba1d6-835c-4241-a6de-cb67fb3f1325",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": "{{public.api.baseurl}}/v3/WorkTemplates/{{public.api.worktemplatekey}}"
                  },
                  "response": []
                },
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains select function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "5792e2ab-381b-4dcd-90fc-43f063c9e6fd"
                      }
                    }
                  ],
                  "id": "b23fd363-7837-40b7-9fc0-232f1751e369",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$select=Title",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "Title"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with expand odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains expand function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Expand' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "4e2aac8c-fa58-46aa-bc9c-827c0f9b7e17"
                      }
                    }
                  ],
                  "id": "b30d0843-0339-48ea-84c1-5976c3aac7dc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$expand=Title",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$expand",
                          "value": "Title"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "cf78fd91-40b1-4193-ac78-b1a54e1a632a"
            },
            {
              "name": "Search",
              "item": [
                {
                  "name": "Search WorkTemplates",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69bbba1c-b97b-4362-bf03-57dcf2c727ec",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Check work items were found\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.value.length).to.gte(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "id": "d6f2e602-1f24-4f06-b79d-1e31d097eba7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$filter=startswith(Title, 'Payroll')",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(Title, 'Payroll')"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "37be247f-120f-401b-b792-b248e536f4c9",
                      "name": "OK",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v3/Contacts?$select=<string>&$filter=<string>&$orderby=<string>&$top=<integer>&$skip=<integer>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "v3",
                            "Contacts"
                          ],
                          "query": [
                            {
                              "key": "$select",
                              "value": "<string>"
                            },
                            {
                              "key": "$filter",
                              "value": "<string>"
                            },
                            {
                              "key": "$orderby",
                              "value": "<string>"
                            },
                            {
                              "key": "$top",
                              "value": "<integer>"
                            },
                            {
                              "key": "$skip",
                              "value": "<integer>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n \"Items\": [\n  {\n   \"FullName\": \"Adams, Douglas Noel\",\n   \"PreferredName\": \"Doug\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@megadodopublications.com\",\n   \"ClientManager\": \"mymanager@megadodopublications.com\",\n   \"Address\": \"42 Galaxy Way, London\",\n   \"EmailAddress\": \"DNA@megadodopublications.net\",\n   \"PhoneNumber\": \"+61212345678\",\n   \"RoleOrTitle\": \"CEO\",\n   \"UserDefinedIdentifier\": \"42\",\n   \"LastModifiedDateTime\": \"2021-01-22T03:00:14.8634476Z\",\n   \"ContactKey\": \"2BtTSg4xM7Dt\"\n  },\n  {\n   \"FullName\": \"Asimov, Isaac\",\n   \"PreferredName\": \"Zac\",\n   \"Salutation\": \"Mr\",\n   \"ClientOwner\": \"myowner@bostonuniversity.edu\",\n   \"ClientManager\": \"mymanager@bostonuniversity.edu\",\n   \"Address\": \"1920 Foundation Boulevard, Petrovichi, Russia\",\n   \"EmailAddress\": \"asimo@bostonuniversity.edu\",\n   \"PhoneNumber\": \"069283779143\",\n   \"RoleOrTitle\": \"Writer\",\n   \"UserDefinedIdentifier\": \"5020\",\n   \"LastModifiedDateTime\": \"2021-02-03T03:00:14.8634476Z\",\n   \"ContactKey\": \"23WWskXjR4wX\"\n  }\n ],\n \"NextPageLink\": \"https://api.karbonhq.com/v3/Contacts?$skip=100\",\n \"Count\": 123\n}"
                    }
                  ]
                },
                {
                  "name": "Search with select odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains Select not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Query option 'Select' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "7e0d9cb2-fbf4-423b-84ad-203a6417f21a"
                      }
                    }
                  ],
                  "id": "4e6305b7-6ac4-4041-a935-31b88dee6015",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$select=Title",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$select",
                          "value": "Title"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with datetime odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {\r",
                          "    pm.response.to.have.status(400);\r",
                          "});\r",
                          "pm.test(\"Body matches contains day function not allowed\", function () {\r",
                          "    pm.expect(pm.response.text()).to.include(\"Function 'day' is not allowed\");\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "2cb6cdef-7fa1-44f4-abde-9f36b0198e4b"
                      }
                    }
                  ],
                  "id": "812dab3b-dffb-43d2-8ad9-c691ab2c65cd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$filter=day(PublishedDate) eq 4",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "day(PublishedDate) eq 4"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Search with startswith odata attribute",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {\r",
                          "    pm.response.to.have.status(200);\r",
                          "});"
                        ],
                        "type": "text/javascript",
                        "id": "76b50d23-38bc-4e4c-9582-6c10aacfae8e"
                      }
                    }
                  ],
                  "id": "14b65d6b-9110-4148-adaf-70ce049d3006",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{publicapi.authorization}}",
                        "type": "text"
                      },
                      {
                        "key": "AccessKey",
                        "value": "{{publicapi.accesskey}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{public.api.baseurl}}/v3/WorkTemplates?$filter=startswith(Title,'test')",
                      "host": [
                        "{{public.api.baseurl}}"
                      ],
                      "path": [
                        "v3",
                        "WorkTemplates"
                      ],
                      "query": [
                        {
                          "key": "$filter",
                          "value": "startswith(Title,'test')"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "id": "c09ef0e4-64b6-47bc-b763-9db90b7446a3"
            }
          ],
          "id": "8cdbc087-94a9-4539-b16b-07b0a4fb29db"
        }
      ],
      "id": "ae7faa85-66ea-4f17-901c-7798cc3be613"
    }
  ]
}